##
# Operational services to run the application in your local environment.
#
# By setting your local DOCKER_ENV environment variable you can spin up
# multiple environments. Keep in mind you should also vary the docker-compose
# --project-name as needed. The `bin/start.sh` script sets a project name of
# <%= machineName %>_${DOCKER_ENV:-local}.
##
version: '2.1'

services:
  # Database service
  db:
    container_name: <%= machineName %>_${DOCKER_ENV:-local}_db
    image: phase2/mariadb
    environment:
      MYSQL_DATABASE: <%= machineName %>_drupal
    volumes:
      - /data/<%= projectName %>_${DOCKER_ENV:-local}/mysql:/var/lib/mysql
    network_mode: "bridge"
    labels:
      com.dnsdock.name: db
      com.dnsdock.image: <%= domain %>
  <% if (cache.external) { %>
  # Application Cache service
  cache:
    container_name: <%= machineName %>_${DOCKER_ENV:-local}_cache
    image: <%= cache.image %>
    network_mode: "bridge"
    labels:
      com.dnsdock.name: cache
      com.dnsdock.image: <%= domain %>
  <% } if (proxy.exists) { %>
  # Reverse-proxy Cache service
  proxy:
    container_name: <%= machineName %>_${DOCKER_ENV:-local}_proxy
    image: phase2/varnish:4.0
    network_mode: "bridge"
    environment:
      VARNISH_BACKEND_HOST: www
    links:
      - www
    labels:
      com.dnsdock.name: www
      com.dnsdock.image: <%= domain %>
  <% } if (mail.exists) { %>
  # MailHog SMTP and UI service.
  mail:
    container_name: <%= machineName %>_${DOCKER_ENV:-local}_mail
    image: mailhog/mailhog
    network_mode: "bridge"
    labels:
      com.dnsdock.name: mail
      com.dnsdock.image: <%= domain %>
  <% } %>
  # Main Application service.
  www:
    container_name: <%= machineName %>_${DOCKER_ENV:-local}_www
    image: <%= app.image %>
    network_mode: "bridge"
    environment:
      DOCROOT: /var/www/build/html
      PHP_MAX_EXECUTION_TIME: 60
      PHP_XDEBUG: "<%= debugMode %>"
      PHP_XHPROF: "<%= debugMode %>"
    links:
      - db<% if (cache.external) { %><%= cache.docker.link %><% } %><% if (mail.exists) { %><%= mail.docker.link %><% } %>
    volumes:
      - .:/var/www/
      # /var/www/src is used for consistency with the build container.
      - /data/<%= projectName %>_${DOCKER_ENV:-local}/files:/var/www/src/sites/default/files
    labels:
      com.dnsdock.name: <% if (proxy.exists) { %>app<% } else { %>www<% } %>
      com.dnsdock.image: <%= domain %>
