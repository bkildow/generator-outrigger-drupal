# Container for starting a cli for build commands
# Usage: docker-compose -y build.yml run cli
cli:
  image: phase2/devtools-build
  entrypoint: []
  working_dir: /code
  command: /bin/bash
  volumes:
    - .:/code/
    - ./env/build/etc/drush:/etc/drush
    - ./build/html:/var/www/html
    - /data/backups/<%= projectName %>_<%= environment %>:/opt/backups
  links:
    - db<% if (cacheInternal) { %><%= cacheLink %><% } %>

# Container for running drush in the docroot.
# Usage: docker-compose -y build.yml run drush <command>
# Where <command> is a direct drush command like cache-rebuild
drush:
  image: phase2/devtools-build
  entrypoint: [ "drush", "@<%= projectName %>" ]
  working_dir: /var/www/html
  volumes:
    - .:/code/
    - ./env/build/etc/drush:/etc/drush
    - ./build/html:/var/www/html
    - /data/backups/<%= projectName %>_<%= environment %>:/opt/backups
  links:
    - db<% if (cacheInternal) { %><%= cacheLink %><% } %>

# Container for running grunt in the docroot.
# Usage: docker-compose -f build.yml run grunt <command>
grunt:
  image: phase2/devtools-build
  entrypoint: [ "grunt" ]
  working_dir: /code
  volumes:
    - .:/code/
    - ./env/build/etc/drush:/etc/drush
    - ./build/html:/var/www/html
    - /data/backups/<%= projectName %>_<%= environment %>:/opt/backups

# Bring in to reuse on our drush container
db:
  extends:
    file: docker-compose.<%= dockerComposeExt %>yml
    service: db
  volumes:
    - /data/drupal8_<%= environment %>/mysql:/var/lib/mysql
<% if(cacheInternal) { %>
cache:
  extends:
    file: docker-compose.<%= dockerComposeExt %>yml
    service: cache
<% } -%>
